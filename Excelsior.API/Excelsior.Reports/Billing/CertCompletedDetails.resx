<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Value" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="GetTrial.ParameterValues" xml:space="preserve">
    <value>{"trialID":"33"}</value>
  </metadata>
  <metadata name="$this.Zoom" type="System.Single, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>0.6666667</value>
  </metadata>
</root>